// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
@use '@angular/material' as mat;

html {
    @include mat.theme((
        color: (
            primary: mat.$azure-palette,
            tertiary: mat.$blue-palette,
        ),
        typography: Roboto,
        density: 0,
    ));
}

/* CSS Reset */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    height: 100%;
    width: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

body {
    height: 100%;
    width: 100%;
    overflow: hidden;
    
    /* Use Material Design tokens directly */
    background-color: var(--mat-sys-surface);
    color: var(--mat-sys-on-surface);
    font: var(--mat-sys-body-medium);
    color-scheme: light dark;

    /* Prevent text selection on UI elements */
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
}

/* Custom Variables for things Material doesn't provide */
:root {
    /* Typography additions */
    --font-size-xs: 0.75rem;        /* Material doesn't have xs */
    --font-size-2xl: 1.5rem;        /* Material doesn't have 2xl */
    
    /* Extended spacing scale */
    --spacing-0: 0;
    --spacing-px: 1px;
    --spacing-2xs: 0.125rem;        /* 2px */
    --spacing-xs: 0.25rem;          /* 4px */
    --spacing-2sm: 0.375rem;        /* 6px */
    --spacing-sm: 0.5rem;           /* 8px */
    --spacing-md: 1rem;             /* 16px */
    --spacing-lg: 1.5rem;           /* 24px */
    --spacing-xl: 2rem;             /* 32px */
    --spacing-2xl: 3rem;            /* 48px */
    
    /* Custom border radius */
    --border-radius-sm: 4px;
    --border-radius: 8px;
    --border-radius-lg: 12px;
    
    /* Animation timing */
    --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
    --transition-normal: 250ms cubic-bezier(0.4, 0, 0.2, 1);
    --transition-slow: 375ms cubic-bezier(0.4, 0, 0.2, 1);

    /* Z-index scale */
    --z-dropdown: 1000;
    --z-sticky: 1020;
    --z-fixed: 1030;
    --z-modal-backdrop: 1040;
    --z-modal: 1050;
    --z-popover: 1060;
    --z-tooltip: 1070;
    --z-toast: 1080;

    /* Focus styles using Material colors */
    --focus-ring: 0 0 0 2px var(--mat-sys-primary);
    --focus-ring-offset: 0 0 0 2px var(--mat-sys-surface), 0 0 0 4px var(--mat-sys-primary);
}

/* Headings */
h1, h2, h3, h4, h5, h6 {
    color: var(--mat-sys-on-surface);
    font-weight: 600;
}

/* Links using Material tokens */
a {
    color: var(--mat-sys-primary);
    text-decoration: none;
    transition: color var(--transition-normal);
    border-radius: var(--border-radius-sm);
}
a:hover {
    color: var(--mat-sys-primary);
    opacity: 0.8;
    text-decoration: underline;
}
a:visited {
    color: var(--mat-sys-tertiary);
}
a:active {
    color: var(--mat-sys-secondary);
}
a:focus-visible {
    outline: none;
    box-shadow: var(--focus-ring);
}

/* Utility Classes */
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}
    /* Focus utilities */
.focus-visible:focus-visible {
    outline: none;
    box-shadow: var(--focus-ring);
}

.focus-offset:focus-visible {
    outline: none;
    box-shadow: var(--focus-ring-offset);
}

    /* Layout utilities */
.flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}
.flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}
.absolute-fill {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}
.flex-column {
    display: flex;
    flex-direction: column;
}
.flex-row {
    display: flex;
    flex-direction: row;
}

    /* Input container using Material tokens */
.input-container {
    display: flex;
    align-items: center;
    background-color: var(--mat-sys-surface-variant);
    border: 1px solid var(--mat-sys-outline);
    border-radius: var(--border-radius);
    padding: var(--spacing-sm);
    transition: border-color var(--transition-normal);
}
.input-container:focus-within {
    border-color: var(--mat-sys-primary);
    box-shadow: var(--focus-ring);
}
.input-container input {
    flex: 1;
    border: none;
    background: none;
    padding: var(--spacing-xs);
    font-family: inherit;
    color: var(--mat-sys-on-surface);
}
.input-container input:focus {
    outline: none;
}
.input-container input::placeholder {
    color: var(--mat-sys-on-surface-variant);
}

    /* Hover effects using Material tokens */
.hover-effect {
    transition: all var(--transition-normal);
    cursor: pointer;
    border-radius: var(--border-radius-sm);
}
.hover-effect:hover {
    background-color: var(--mat-sys-surface-variant);
    transform: translateY(-1px);
}
.hover-effect:active {
    transform: translateY(0);
    background-color: var(--mat-sys-secondary-container);
}

    /* Scrollable using Material tokens */
.scrollable {
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: var(--mat-sys-outline) transparent;
}
.scrollable::-webkit-scrollbar {
    width: 6px;
}
.scrollable::-webkit-scrollbar-track {
    background: transparent;
}
.scrollable::-webkit-scrollbar-thumb {
    background-color: var(--mat-sys-outline);
    border-radius: var(--border-radius-sm);
    opacity: 0.6;
    transition: opacity var(--transition-normal);
}
.scrollable::-webkit-scrollbar-thumb:hover {
    opacity: 1;
    background-color: var(--mat-sys-primary);
}

    /* Animation utilities */
.fade-in {
    animation: fadeIn var(--transition-normal) ease-in-out;
}
.slide-up {
    animation: slideUp var(--transition-normal) ease-out;
}
.scale-in {
    animation: scaleIn var(--transition-fast) ease-out;
}
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}
@keyframes slideUp {
    from { 
        opacity: 0;
        transform: translateY(1rem);
    }
    to { 
        opacity: 1;
        transform: translateY(0);
    }
}
@keyframes scaleIn {
    from { 
        opacity: 0;
        transform: scale(0.95);
    }
    to { 
        opacity: 1;
        transform: scale(1);
    }
}

        /* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

    /* Typography utilities - only custom sizes */
.text-xs { font-size: var(--font-size-xs); }
.text-2xl { font-size: var(--font-size-2xl); }

    /* Link utility classes using Material tokens */
.link-primary {
    color: var(--mat-sys-primary);
}
.link-primary:hover {
    color: var(--mat-sys-primary);
    opacity: 0.8;
}
.link-secondary {
    color: var(--mat-sys-secondary);
}
.link-secondary:hover {
    color: var(--mat-sys-secondary);
    opacity: 0.8;
}
.link-unstyled {
    color: inherit;
    text-decoration: none;
}
.link-unstyled:hover {
    color: inherit;
    text-decoration: none;
}

    /* Material Design Utility Classes */
.surface-variant {
    background-color: var(--mat-sys-surface-variant);
    color: var(--mat-sys-on-surface-variant);
}
.surface-container {
    background-color: var(--mat-sys-surface-container);
    color: var(--mat-sys-on-surface);
}
.surface-container-high {
    background-color: var(--mat-sys-surface-container-high);
    color: var(--mat-sys-on-surface);
}

    /* Status indicators using Material tokens */
.status-success {
    color: var(--mat-sys-tertiary);
    background-color: var(--mat-sys-tertiary-container);
}
.status-warning {
    color: var(--mat-sys-secondary);
    background-color: var(--mat-sys-secondary-container);
}
.status-error {
    color: var(--mat-sys-error);
    background-color: var(--mat-sys-error-container);
}